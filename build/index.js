"use strict";var budzetKontroler=function(){var r=[0],u=[0],t=0,o=0,a=0,n=0,d=function(){var e=function(e,t){return e+t};o=Math.round(100*r.reduce(e))/100,a=Math.round(100*u.reduce(e))/100,t=Math.floor(100*(o-a))/100,n=Math.floor(100*a/o*100)/100};return{dodajElementDoBudzetu:function(e){"dochod"===e.rodzaj&&r.push(e.kwota),"wydatki"===e.rodzaj&&u.push(e.kwota),d()},usunElementZBudzetu:function(e){var t=e.parentNode.dataset.type,o=e.previousElementSibling.innerHTML.match(/\d+/g).map(Number);if("dochod"===t){var a=r.indexOf(o[0]);-1!==a&&r.splice(a,1)}if("wydatki"===t){var n=u.indexOf(o[0]);-1!==n&&u.splice(n,1)}d()},pobierzDaneBudzetu:function(){return{sumaDochodu:o,sumaWydatki:a,saldo:t,wydatkiProcent:n}}}}(),uiKontroler={zglosBledy:function(e){var t=document.querySelector(".kalkulator__bledy");t.innerHTML=e,t.classList.add("kalkulator__bledy--aktywny"),setTimeout(function(){t.classList.remove("kalkulator__bledy--aktywny")},5e3)},dodajElementBudzetuDoUI:function(e){var t,o=(t=e.rodzaj,document.querySelector("#".concat(t,"__template")).cloneNode(!0));o.content.querySelector(".element__opis").innerHTML=e.nazwa,o.content.querySelector(".element__kwota").innerHTML="".concat(e.kwota," zł"),document.querySelector(".".concat(e.rodzaj,"__lista")).appendChild(o.content)},aktualizujBudzetUI:function(e){var t=document.querySelector(".budzet__srodki"),o=document.querySelector(".dochod__srodki"),a=document.querySelector(".wydatki__srodki"),n=document.querySelector(".wydatki__procent");t.innerHTML=e.saldo+" zł",o.innerHTML=e.sumaDochodu+" zł",a.innerHTML=e.sumaWydatki+" zł",n.innerHTML=e.wydatkiProcent+" %"}},appKontroler=function(a,n){var r=function(t){var o="";if(Object.keys(t).forEach(function(e){""===t[e]?o+="nazwa"===e?"Wprowadz dane w polu dodaj opis <br>":"Wprowadz dane w polu ".concat(e," <br>"):"nazwa"===e&&t[e].length<3?o+="Wprowadz minimum 3 znaki w polu ".concat(e," <br>"):("kwota"===e&&isNaN(parseFloat(t[e]))&&!isFinite(t[e])||"kwota"===e&&String(t[e]).includes("-"))&&(o+="Wprowadz poprawne dane w polu ".concat(e," (tylko liczby) <br>"))}),o)return n.zglosBledy(o),!0};return{inicjalizacja:function(){document.querySelector("body").addEventListener("click",function(e){var t,o;"kalkulator__przycisk kalkulator__przycisk--dodaj"===e.target.className&&(t={rodzaj:document.querySelector('[name="rodzaj"]').value,nazwa:document.querySelector('[name="nazwa"]').value,kwota:Math.floor(100*document.querySelector('[name="kwota"]').value.replace(",","."))/100},r(t)||(a.dodajElementDoBudzetu(t),n.dodajElementBudzetuDoUI(t),n.aktualizujBudzetUI(a.pobierzDaneBudzetu()))),"element__usun"===e.target.className&&(o=e.target,a.usunElementZBudzetu(o),n.aktualizujBudzetUI(a.pobierzDaneBudzetu()),o.parentNode.remove())})}}}(budzetKontroler,uiKontroler);appKontroler.inicjalizacja();
"use strict";
"use strict";!function(){var d=!1,i=function(){var e=document.querySelector(".hamburger__przycisk");document.querySelector(".nawigacja").classList.toggle("nawigacja--ukryj"),e.classList.toggle("hamburger__przycisk--aktywny"),d=!d};document.addEventListener("DOMContentLoaded",function(e){document.addEventListener("click",function(e){var t,a,s,r,c,o;if(e.target.closest(".hamburger__przycisk"))i();else if(t=e.target.dataset.link,a=document.querySelector(".budzet"),s=document.querySelector(".todo"),r=document.querySelector("[data-link=budzet]"),c=document.querySelector("[data-link=todo]"),o=document.querySelector(".hamburger__przycisk"),"budzet"===t&&(r.classList.add("nawigacja__aktywny"),c.classList.remove("nawigacja__aktywny"),a.classList.remove("budzet__ukryj"),s.classList.remove("todo__pokaz"),o.classList.remove("hamburger__przycisk--todo"),i()),"todo"===t&&(c.classList.add("nawigacja__aktywny"),r.classList.remove("nawigacja__aktywny"),a.classList.add("budzet__ukryj"),s.classList.add("todo__pokaz"),o.classList.add("hamburger__przycisk--todo"),i()),1!=d);else{if(e.target.closest(".nawigacja"))return;i()}})})}();
"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}var dataKontroler=function(){var o=[];return{dodajElement:function(e,t){o=[].concat(_toConsumableArray(o),[{rodzajTemplatki:e,opis:t}])},pobierzElementy:function(){return o},usunElement:function(t,n){var e=o.findIndex(function(e){return e.rodzajTemplatki==t&&e.opis===n});o=[].concat(_toConsumableArray(o.slice(0,e)),_toConsumableArray(o.slice(e+1)))}}}(),uiKontroler={wyswietlJedenElement:function(e,t){var n,o,r,a;n=e,o=t,r=document.querySelector("[data-template=".concat(n,"]")).parentNode,(a=document.querySelector("[data-template=".concat(n,"]")).cloneNode(!0)).content.querySelector(".todo__opis").innerHTML=o,r.insertBefore(a.content,r.firstChild)},usunElement:function(e){e.parentNode.remove()},skreslElement:function(e){e.classList.toggle("todo__element--skreslony")}},todoAppKontroler=function(i,l){var r=function(e){var n,o,t,r=e.dataset.type,a=document.querySelector("[data-template=".concat(r,"]")).parentNode.previousElementSibling;n=r,t=function e(t){"Enter"===t.key&&(o.classList.remove("todo__input--pokaz"),o.value&&(i.dodajElement(n,o.value),l.wyswietlJedenElement(n,o.value),o.value=""),o.removeEventListener("keypress",e))},(o=a).classList.add("todo__input--pokaz"),o.focus(),o.addEventListener("focusout",function e(){o.classList.remove("todo__input--pokaz"),o.removeEventListener("focusout",e),o.removeEventListener("keypress",t),o.value=""}),o.addEventListener("keypress",t)},e=function(){document.querySelector("body").addEventListener("click",function(e){var t,n,o;"todo__dodaj"===e.target.className&&r(e.target),"todo__usun"===e.target.className&&(t=e.target,n=t.parentNode.firstChild.innerHTML,o=t.parentNode.parentNode.previousElementSibling.previousElementSibling.dataset.type,i.usunElement(o,n),l.usunElement(t)),"todo__element"!==e.target.className&&"todo__element todo__element--skreslony"!==e.target.className||l.skreslElement(e.target)})};return{inicjalizacja:function(){e()}}}(dataKontroler,uiKontroler);todoAppKontroler.inicjalizacja();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1ZHpldC5qcyIsImluZGV4LmpzIiwibmF3aWdhY2phLmpzIiwidG9kby5qcyJdLCJuYW1lcyI6WyJidWR6ZXRLb250cm9sZXIiLCJkb2Nob2RMaXN0YSIsInd5ZGF0a2lMaXN0YSIsInNhbGRvIiwic3VtYURvY2hvZHUiLCJ3eWRhdGtpUHJvY2VudCIsImdldHN1bSIsInRvdGFsIiwibnVtIiwiYWt0dWFsaXp1akJ1ZHpldCIsIk1hdGgiLCJyZWR1Y2UiLCJzdW1hV3lkYXRraSIsInJvdW5kIiwiZmxvb3IiLCJkb2RhakVsZW1lbnREb0J1ZHpldHUiLCJkYW5lIiwicm9kemFqIiwia3dvdGEiLCJwdXNoIiwiZSIsInBhcmVudE5vZGUiLCJkYXRhc2V0IiwidHlwZSIsInVzdW5FbGVtZW50WkJ1ZHpldHUiLCJpbm5lckhUTUwiLCJtYXRjaCIsIm1hcCIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsInBvYmllcnpEYW5lQnVkemV0dSIsInVpS29udHJvbGVyIiwiemdsb3NCbGVkeSIsImJsZWR5IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xhc3NMaXN0Iiwic2V0VGltZW91dCIsInJlbW92ZSIsImRvZGFqRWxlbWVudEJ1ZHpldHVEb1VJIiwidGVtcCIsImNvbmNhdCIsImNsb25lTm9kZSIsImNvbnRlbnQiLCJuYXp3YSIsImFwcGVuZENoaWxkIiwiZG9jaG9kU3JvZGtpIiwid3lkYXRraVNyb2RraSIsImJ1ZHpldFNyb2RraSIsImFwcEtvbnRyb2xlciIsImJ1ZGdldCIsImRvZGFqQnVkemV0IiwidWkiLCJzcHJhd2R6RGFuZSIsImVycm9ycyIsImZvckVhY2giLCJsZW5ndGgiLCJpc05hTiIsInBhcnNlRmxvYXQiLCJpc0Zpbml0ZSIsIlN0cmluZyIsImluY2x1ZGVzIiwiaW5pY2phbGl6YWNqYSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJjbGFzc05hbWUiLCJ2YWx1ZSIsImFrdHVhbGl6dWpCdWR6ZXRVSSIsInJlcGxhY2UiLCJqZXN0QWt0eXdueSIsImhhbWJ1cmdlckJ1dHRvbiIsIm1lbnVUb2dnbGUiLCJ0b2dnbGUiLCJuYXdpZ2FjamEiLCJidWR6ZXQiLCJ6bWllblN0cm9uZSIsInRvZG8iLCJidWR6ZXRMaW5rIiwiY2xvc2VzdCIsImxpbmsiLCJoYW1idXJnZXIiLCJhZGQiLCJ0b2RvTGluayIsImRhdGFLb250cm9sZXIiLCJlbGVtZW50cyIsImRvZGFqRWxlbWVudCIsInJvZHphalRlbXBsYXRraSIsIm9waXMiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJwb2JpZXJ6RWxlbWVudHkiLCJmaW5kSW5kZXgiLCJpdGVtIiwic2xpY2UiLCJ3eXN3aWV0bEplZGVuRWxlbWVudCIsInVzdW5FbGVtZW50IiwidGVtcGxhdGthIiwibGlzdGEiLCJpbnNlcnRCZWZvcmUiLCJmaXJzdENoaWxkIiwic2tyZXNsRWxlbWVudCIsImRhdGEiLCJpbnB1dCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJwb2theklucHV0IiwicG9sZUlucHV0IiwidWtyeWpQb3phRm9jdXNlbSIsImdkeU5hY2lzbmlldHlFbnRlciIsImRvZGF3YW5pZUVsZW1lbnR1IiwiZG9kYWpFdmVudHkiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwidXN1d2FuaWVFbGVtZW50dSIsInRvZG9BcHBLb250cm9sZXIiXSwibWFwcGluZ3MiOiJhQUtBLElBQU1BLGdCQUFtQixXQUN2QixJQUFJQyxFQUFjLENBQUMsR0FEZkQsRUFBZSxDQUFJLEdBQ25CQyxFQUFBQSxFQUNBQyxFQUFZLEVBQ1pDLEVBQUosRUFDSUMsRUFBSixFQUVJQyxFQUFKLFdBR0UsSUFBTUMsRUFBUyxTQUFDQyxFQUFPQyxHQURuQkMsT0FBQUEsRUFBQUEsR0FFRkwsRUFBWU0sS0FBR0YsTUFBZixJQUFBUCxFQUFBVSxPQUFBTCxJQUFBLElBQ0RNLEVBRkRGLEtBQUFHLE1BQUEsSUFBQVgsRUFBQVMsT0FBQUwsSUFBQSxJQUdBRixFQUFBQSxLQUFXVSxNQUFpQ1IsS0FBekJPLEVBQU1aLElBQTZCLElB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QVczQyxZQVRROUMsRUFVZGdCLEVBQWM2QixPQW5CbkIyQyxFQUFBQSxFQUFBQSxXQUFvQlQsV0FBcEJTLFVBQ0VyQixFQUNObkUsRUFBTXFGLFdBQVNwRixXQUFZZSx1QkFBVDBFLHVCQUlsQk4sUUFBV2pCLEtBTmJjLEVBQUFOLFlBQUE5RSxFQUFBdUUsR0FlRW5DLEVBQUcwQyxZQUFZM0UsSUFPWixrQkFBQUEsRUFBQTZDLE9BQUFDLFdBTXdCLDJDQUF2QjlDLEVBQUU2QyxPQUFPQyxXQUpUNkMsRUFBQUEsY0FBaUIzRixFQUFFNkMsV0FPcEIsTUFBQSxDQUNGRixjQWJELFdBREY4QyxNQXJESSxDQXVFRjlDLGNBQWEvQixhQUVaZ0YsaUJBQUFqRCIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIERvZGF3YW5pZSBidWR6ZXR1XHJcbi8qIEJ1ZHpldCB0eWxrbyBuYSBwb2theiwgZ2R5YnltIGNoY2lhxYIgYWJ5IGFwbGlrYWNqYSBmdW5rY2pvbm93YcWCYSB6IGJhesSFIGRhbnljaCB0b1xyXG4gcHJ6ZWNob3d5d2HFgmJ5bSBvcGlzLCBrd290ZSBpIHR5cCB3IHR6dy4gb2JqZWN0IGFycmF5IGkgY28gYWt0dWFsaXphY2plIHd5c3nFgmHFgiBkbyBiYXp5IGRhbnljaCxcclxuIGEgcHJ6eSB1cnVjaG9taWVuaXUgdyBmdW5rY2ppIGluaWNqYWxpemFjamEgemHFgmFkb3dhxYJieW0gZGFuZSB6IGJhenkuICovXHJcblxyXG5jb25zdCBidWR6ZXRLb250cm9sZXIgPSAoKCkgPT4ge1xyXG4gIGxldCBkb2Nob2RMaXN0YSA9IFswXTtcclxuICBsZXQgd3lkYXRraUxpc3RhID0gWzBdO1xyXG4gIGxldCBzYWxkbyA9IDA7XHJcbiAgbGV0IHN1bWFEb2Nob2R1ID0gMDtcclxuICBsZXQgc3VtYVd5ZGF0a2kgPSAwO1xyXG4gIGxldCB3eWRhdGtpUHJvY2VudCA9IDA7XHJcblxyXG4gIGNvbnN0IGFrdHVhbGl6dWpCdWR6ZXQgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBnZXRzdW0gPSAodG90YWwsIG51bSkgPT4ge1xyXG4gICAgICByZXR1cm4gdG90YWwgKyBudW07XHJcbiAgICB9O1xyXG4gICAgc3VtYURvY2hvZHUgPSBNYXRoLnJvdW5kKGRvY2hvZExpc3RhLnJlZHVjZShnZXRzdW0pICogMTAwKSAvIDEwMDtcclxuICAgIHN1bWFXeWRhdGtpID0gTWF0aC5yb3VuZCh3eWRhdGtpTGlzdGEucmVkdWNlKGdldHN1bSkgKiAxMDApIC8gMTAwO1xyXG5cclxuICAgIHNhbGRvID0gTWF0aC5mbG9vcigoc3VtYURvY2hvZHUgLSBzdW1hV3lkYXRraSkgKiAxMDApIC8gMTAwO1xyXG4gICAgd3lkYXRraVByb2NlbnQgPVxyXG4gICAgICBNYXRoLmZsb29yKCgoc3VtYVd5ZGF0a2kgKiAxMDApIC8gc3VtYURvY2hvZHUpICogMTAwKSAvIDEwMDtcclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgZG9kYWpFbGVtZW50RG9CdWR6ZXR1OiBkYW5lID0+IHtcclxuICAgICAgaWYgKGRhbmUucm9kemFqID09PSBcImRvY2hvZFwiKSB7XHJcbiAgICAgICAgZG9jaG9kTGlzdGEucHVzaChkYW5lLmt3b3RhKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoZGFuZS5yb2R6YWogPT09IFwid3lkYXRraVwiKSB7XHJcbiAgICAgICAgd3lkYXRraUxpc3RhLnB1c2goZGFuZS5rd290YSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGFrdHVhbGl6dWpCdWR6ZXQoKTtcclxuICAgIH0sXHJcbiAgICB1c3VuRWxlbWVudFpCdWR6ZXR1OiBlID0+IHtcclxuICAgICAgY29uc3Qgcm9kemFqID0gZS5wYXJlbnROb2RlLmRhdGFzZXQudHlwZTtcclxuICAgICAgY29uc3Qga3dvdGEgPSBlLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuaW5uZXJIVE1MXHJcbiAgICAgICAgLm1hdGNoKC9cXGQrL2cpXHJcbiAgICAgICAgLm1hcChOdW1iZXIpO1xyXG5cclxuICAgICAgaWYgKHJvZHphaiA9PT0gXCJkb2Nob2RcIikge1xyXG4gICAgICAgIGNvbnN0IGluZGV4ID0gZG9jaG9kTGlzdGEuaW5kZXhPZihrd290YVswXSk7XHJcbiAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xyXG4gICAgICAgICAgZG9jaG9kTGlzdGEuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHJvZHphaiA9PT0gXCJ3eWRhdGtpXCIpIHtcclxuICAgICAgICBjb25zdCBpbmRleCA9IHd5ZGF0a2lMaXN0YS5pbmRleE9mKGt3b3RhWzBdKTtcclxuICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XHJcbiAgICAgICAgICB3eWRhdGtpTGlzdGEuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGFrdHVhbGl6dWpCdWR6ZXQoKTtcclxuICAgIH0sXHJcbiAgICBwb2JpZXJ6RGFuZUJ1ZHpldHU6ICgpID0+IHtcclxuICAgICAgY29uc3QgZGFuZSA9IHtcclxuICAgICAgICBzdW1hRG9jaG9kdSxcclxuICAgICAgICBzdW1hV3lkYXRraSxcclxuICAgICAgICBzYWxkbyxcclxuICAgICAgICB3eWRhdGtpUHJvY2VudFxyXG4gICAgICB9O1xyXG4gICAgICByZXR1cm4gZGFuZTtcclxuICAgIH1cclxuICB9O1xyXG59KSgpO1xyXG5cclxuY29uc3QgdWlLb250cm9sZXIgPSAoKCkgPT4ge1xyXG4gIGNvbnN0IHpuYWpkelRlbXBsYXRrZSA9IHJvZHphaiA9PiB7XHJcbiAgICBjb25zdCB0ZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7cm9kemFqfV9fdGVtcGxhdGVgKTtcclxuICAgIGNvbnN0IGNsb25lID0gdGVtcC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICByZXR1cm4gY2xvbmU7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHpnbG9zQmxlZHk6IGUgPT4ge1xyXG4gICAgICBjb25zdCBibGVkeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIua2Fsa3VsYXRvcl9fYmxlZHlcIik7XHJcblxyXG4gICAgICBibGVkeS5pbm5lckhUTUwgPSBlO1xyXG4gICAgICBibGVkeS5jbGFzc0xpc3QuYWRkKFwia2Fsa3VsYXRvcl9fYmxlZHktLWFrdHl3bnlcIik7XHJcblxyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBibGVkeS5jbGFzc0xpc3QucmVtb3ZlKFwia2Fsa3VsYXRvcl9fYmxlZHktLWFrdHl3bnlcIik7XHJcbiAgICAgIH0sIDUwMDApO1xyXG4gICAgfSxcclxuXHJcbiAgICBkb2RhakVsZW1lbnRCdWR6ZXR1RG9VSTogZGFuZSA9PiB7XHJcbiAgICAgIGNvbnN0IHRlbXAgPSB6bmFqZHpUZW1wbGF0a2UoZGFuZS5yb2R6YWopO1xyXG5cclxuICAgICAgdGVtcC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fb3Bpc1wiKS5pbm5lckhUTUwgPSBkYW5lLm5hendhO1xyXG4gICAgICB0ZW1wLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19rd290YVwiKS5pbm5lckhUTUwgPSBgJHtcclxuICAgICAgICBkYW5lLmt3b3RhXHJcbiAgICAgIH0gesWCYDtcclxuXHJcbiAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoYC4ke2RhbmUucm9kemFqfV9fbGlzdGFgKVxyXG4gICAgICAgIC5hcHBlbmRDaGlsZCh0ZW1wLmNvbnRlbnQpO1xyXG4gICAgfSxcclxuICAgIGFrdHVhbGl6dWpCdWR6ZXRVSTogZGFuZSA9PiB7XHJcbiAgICAgIGNvbnN0IGJ1ZHpldFNyb2RraSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnVkemV0X19zcm9ka2lcIik7XHJcbiAgICAgIGNvbnN0IGRvY2hvZFNyb2RraSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZG9jaG9kX19zcm9ka2lcIik7XHJcbiAgICAgIGNvbnN0IHd5ZGF0a2lTcm9ka2kgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnd5ZGF0a2lfX3Nyb2RraVwiKTtcclxuICAgICAgY29uc3Qgd3lkYXRraVByb2NlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnd5ZGF0a2lfX3Byb2NlbnRcIik7XHJcblxyXG4gICAgICBidWR6ZXRTcm9ka2kuaW5uZXJIVE1MID0gZGFuZS5zYWxkbyArIFwiIHrFglwiO1xyXG4gICAgICBkb2Nob2RTcm9ka2kuaW5uZXJIVE1MID0gZGFuZS5zdW1hRG9jaG9kdSArIFwiIHrFglwiO1xyXG4gICAgICB3eWRhdGtpU3JvZGtpLmlubmVySFRNTCA9IGRhbmUuc3VtYVd5ZGF0a2kgKyBcIiB6xYJcIjtcclxuICAgICAgd3lkYXRraVByb2NlbnQuaW5uZXJIVE1MID0gZGFuZS53eWRhdGtpUHJvY2VudCArIFwiICVcIjtcclxuICAgIH1cclxuICB9O1xyXG59KSgpO1xyXG5cclxuY29uc3QgYXBwS29udHJvbGVyID0gKChidWRnZXQsIHVpKSA9PiB7XHJcbiAgY29uc3QgZG9kYWpCdWR6ZXQgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBkYW5lID0ge1xyXG4gICAgICByb2R6YWo6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwicm9kemFqXCJdJykudmFsdWUsXHJcbiAgICAgIG5hendhOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cIm5hendhXCJdJykudmFsdWUsXHJcbiAgICAgIGt3b3RhOlxyXG4gICAgICAgIE1hdGguZmxvb3IoXHJcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImt3b3RhXCJdJykudmFsdWUucmVwbGFjZShcIixcIiwgXCIuXCIpICogMTAwXHJcbiAgICAgICAgKSAvIDEwMFxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoc3ByYXdkekRhbmUoZGFuZSkpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgYnVkZ2V0LmRvZGFqRWxlbWVudERvQnVkemV0dShkYW5lKTtcclxuICAgIHVpLmRvZGFqRWxlbWVudEJ1ZHpldHVEb1VJKGRhbmUpO1xyXG4gICAgdWkuYWt0dWFsaXp1akJ1ZHpldFVJKGJ1ZGdldC5wb2JpZXJ6RGFuZUJ1ZHpldHUoKSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdXN1bkVsZW1lbnRaQnVkemV0dSA9IGUgPT4ge1xyXG4gICAgYnVkZ2V0LnVzdW5FbGVtZW50WkJ1ZHpldHUoZSk7XHJcbiAgICB1aS5ha3R1YWxpenVqQnVkemV0VUkoYnVkZ2V0LnBvYmllcnpEYW5lQnVkemV0dSgpKTtcclxuICAgIGUucGFyZW50Tm9kZS5yZW1vdmUoKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBzcHJhd2R6RGFuZSA9IGRhbmUgPT4ge1xyXG4gICAgbGV0IGVycm9ycyA9IFwiXCI7XHJcblxyXG4gICAgT2JqZWN0LmtleXMoZGFuZSkuZm9yRWFjaChlID0+IHtcclxuICAgICAgaWYgKGRhbmVbZV0gPT09IFwiXCIpIHtcclxuICAgICAgICBpZiAoZSA9PT0gXCJuYXp3YVwiKSB7XHJcbiAgICAgICAgICBlcnJvcnMgKz0gYFdwcm93YWR6IGRhbmUgdyBwb2x1IGRvZGFqIG9waXMgPGJyPmA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGVycm9ycyArPSBgV3Byb3dhZHogZGFuZSB3IHBvbHUgJHtlfSA8YnI+YDtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSBpZiAoZSA9PT0gXCJuYXp3YVwiICYmIGRhbmVbZV0ubGVuZ3RoIDwgMykge1xyXG4gICAgICAgIGVycm9ycyArPSBgV3Byb3dhZHogbWluaW11bSAzIHpuYWtpIHcgcG9sdSAke2V9IDxicj5gO1xyXG4gICAgICB9IGVsc2UgaWYgKFxyXG4gICAgICAgIChlID09PSBcImt3b3RhXCIgJiYgKGlzTmFOKHBhcnNlRmxvYXQoZGFuZVtlXSkpICYmICFpc0Zpbml0ZShkYW5lW2VdKSkpIHx8XHJcbiAgICAgICAgKGUgPT09IFwia3dvdGFcIiAmJiBTdHJpbmcoZGFuZVtlXSkuaW5jbHVkZXMoXCItXCIpKVxyXG4gICAgICApIHtcclxuICAgICAgICBlcnJvcnMgKz0gYFdwcm93YWR6IHBvcHJhd25lIGRhbmUgdyBwb2x1ICR7ZX0gKHR5bGtvIGxpY3pieSkgPGJyPmA7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGlmIChlcnJvcnMpIHtcclxuICAgICAgdWkuemdsb3NCbGVkeShlcnJvcnMpO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm47XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGluaWNqYWxpemFjamE6ICgpID0+IHtcclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4ge1xyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTmFtZSA9PT1cclxuICAgICAgICAgIFwia2Fsa3VsYXRvcl9fcHJ6eWNpc2sga2Fsa3VsYXRvcl9fcHJ6eWNpc2stLWRvZGFqXCJcclxuICAgICAgICApIHtcclxuICAgICAgICAgIGRvZGFqQnVkemV0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc05hbWUgPT09IFwiZWxlbWVudF9fdXN1blwiKSB7XHJcbiAgICAgICAgICB1c3VuRWxlbWVudFpCdWR6ZXR1KGUudGFyZ2V0KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gIH07XHJcbn0pKGJ1ZHpldEtvbnRyb2xlciwgdWlLb250cm9sZXIpO1xyXG5cclxuYXBwS29udHJvbGVyLmluaWNqYWxpemFjamEoKTtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7IiwiKCgpID0+IHtcclxuICBsZXQgamVzdEFrdHl3bnkgPSBmYWxzZTtcclxuXHJcbiAgY29uc3QgbWVudVRvZ2dsZSA9ICgpID0+IHtcclxuICAgIGNvbnN0IGhhbWJ1cmdlckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGFtYnVyZ2VyX19wcnp5Y2lza1wiKTtcclxuICAgIGNvbnN0IG5hd2lnYWNqYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF3aWdhY2phXCIpO1xyXG4gICAgbmF3aWdhY2phLmNsYXNzTGlzdC50b2dnbGUoXCJuYXdpZ2FjamEtLXVrcnlqXCIpO1xyXG4gICAgaGFtYnVyZ2VyQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJoYW1idXJnZXJfX3ByenljaXNrLS1ha3R5d255XCIpO1xyXG4gICAgamVzdEFrdHl3bnkgPSAhamVzdEFrdHl3bnk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgem1pZW5TdHJvbmUgPSBlID0+IHtcclxuICAgIGNvbnN0IGJ1ZHpldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnVkemV0XCIpO1xyXG4gICAgY29uc3QgdG9kbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9kb1wiKTtcclxuICAgIGNvbnN0IGJ1ZHpldExpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtbGluaz1idWR6ZXRdXCIpO1xyXG4gICAgY29uc3QgdG9kb0xpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtbGluaz10b2RvXVwiKTtcclxuICAgIGNvbnN0IGhhbWJ1cmdlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGFtYnVyZ2VyX19wcnp5Y2lza1wiKTtcclxuXHJcbiAgICBpZiAoZSA9PT0gXCJidWR6ZXRcIikge1xyXG4gICAgICBidWR6ZXRMaW5rLmNsYXNzTGlzdC5hZGQoXCJuYXdpZ2FjamFfX2FrdHl3bnlcIik7XHJcbiAgICAgIHRvZG9MaW5rLmNsYXNzTGlzdC5yZW1vdmUoXCJuYXdpZ2FjamFfX2FrdHl3bnlcIik7XHJcbiAgICAgIGJ1ZHpldC5jbGFzc0xpc3QucmVtb3ZlKFwiYnVkemV0X191a3J5alwiKTtcclxuICAgICAgdG9kby5jbGFzc0xpc3QucmVtb3ZlKFwidG9kb19fcG9rYXpcIik7XHJcbiAgICAgIGhhbWJ1cmdlci5jbGFzc0xpc3QucmVtb3ZlKFwiaGFtYnVyZ2VyX19wcnp5Y2lzay0tdG9kb1wiKTtcclxuICAgICAgbWVudVRvZ2dsZSgpO1xyXG4gICAgfVxyXG4gICAgaWYgKGUgPT09IFwidG9kb1wiKSB7XHJcbiAgICAgIHRvZG9MaW5rLmNsYXNzTGlzdC5hZGQoXCJuYXdpZ2FjamFfX2FrdHl3bnlcIik7XHJcbiAgICAgIGJ1ZHpldExpbmsuY2xhc3NMaXN0LnJlbW92ZShcIm5hd2lnYWNqYV9fYWt0eXdueVwiKTtcclxuICAgICAgYnVkemV0LmNsYXNzTGlzdC5hZGQoXCJidWR6ZXRfX3VrcnlqXCIpO1xyXG4gICAgICB0b2RvLmNsYXNzTGlzdC5hZGQoXCJ0b2RvX19wb2thelwiKTtcclxuICAgICAgaGFtYnVyZ2VyLmNsYXNzTGlzdC5hZGQoXCJoYW1idXJnZXJfX3ByenljaXNrLS10b2RvXCIpO1xyXG4gICAgICBtZW51VG9nZ2xlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZSA9PiB7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB7XHJcbiAgICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLmhhbWJ1cmdlcl9fcHJ6eWNpc2tcIikpIHtcclxuICAgICAgICBtZW51VG9nZ2xlKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB6bWllblN0cm9uZShlLnRhcmdldC5kYXRhc2V0LmxpbmspO1xyXG5cclxuICAgICAgaWYgKGplc3RBa3R5d255ID09IHRydWUpIHtcclxuICAgICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdChcIi5uYXdpZ2FjamFcIikpIHJldHVybjtcclxuICAgICAgICBtZW51VG9nZ2xlKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9KTtcclxufSkoKTtcclxuIiwiY29uc3QgZGF0YUtvbnRyb2xlciA9ICgoKSA9PiB7XHJcbiAgbGV0IGVsZW1lbnRzID0gW107XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBkb2RhakVsZW1lbnQ6IChyb2R6YWpUZW1wbGF0a2ksIG9waXMpID0+IHtcclxuICAgICAgZWxlbWVudHMgPSBbLi4uZWxlbWVudHMsIHsgcm9kemFqVGVtcGxhdGtpLCBvcGlzIH1dO1xyXG4gICAgfSxcclxuICAgIHBvYmllcnpFbGVtZW50eTogKCkgPT4ge1xyXG4gICAgICByZXR1cm4gZWxlbWVudHM7XHJcbiAgICB9LFxyXG4gICAgdXN1bkVsZW1lbnQ6IChyb2R6YWpUZW1wbGF0a2ksIG9waXMpID0+IHtcclxuICAgICAgY29uc3QgaW5kZXggPSBlbGVtZW50cy5maW5kSW5kZXgoXHJcbiAgICAgICAgaXRlbSA9PiBpdGVtLnJvZHphalRlbXBsYXRraSA9PSByb2R6YWpUZW1wbGF0a2kgJiYgaXRlbS5vcGlzID09PSBvcGlzXHJcbiAgICAgICk7XHJcblxyXG4gICAgICBlbGVtZW50cyA9IFsuLi5lbGVtZW50cy5zbGljZSgwLCBpbmRleCksIC4uLmVsZW1lbnRzLnNsaWNlKGluZGV4ICsgMSldO1xyXG4gICAgfVxyXG4gIH07XHJcbn0pKCk7XHJcblxyXG5jb25zdCB1aUtvbnRyb2xlciA9ICgoKSA9PiB7XHJcbiAgY29uc3Qgd3lzd2lldGxFbGVtZW50ID0gKHJvZHphaiwgb3BpcykgPT4ge1xyXG4gICAgY29uc3QgbGlzdGEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbZGF0YS10ZW1wbGF0ZT0ke3JvZHphan1dYClcclxuICAgICAgLnBhcmVudE5vZGU7XHJcbiAgICBjb25zdCB0ZW1wbGF0a2EgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihgW2RhdGEtdGVtcGxhdGU9JHtyb2R6YWp9XWApXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gICAgdGVtcGxhdGthLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi50b2RvX19vcGlzXCIpLmlubmVySFRNTCA9IG9waXM7XHJcbiAgICBsaXN0YS5pbnNlcnRCZWZvcmUodGVtcGxhdGthLmNvbnRlbnQsIGxpc3RhLmZpcnN0Q2hpbGQpO1xyXG4gIH07XHJcbiAgcmV0dXJuIHtcclxuICAgIC8vICAgRnVua2NqYSBkbyB3ecWbd2lldGxlbmlhIHdpZWx1IGVsZW1lbnTDs3cgemEgcGllcndzenltIHVydWNob21pZW5pZW0gYXBraVxyXG4gICAgLy8gICB3aWVkesSFYywgxbxlIGlzdG5pZWplIGJhemEgZGFueWNoLlxyXG4gICAgLy8gd3lzd2lldGxXc3p5c3RraWVFbGVtZW50eTogZWxlbWVudHkgPT4ge1xyXG4gICAgLy8gICBlbGVtZW50eS5tYXAoZSA9PiB7XHJcbiAgICAvLyAgICAgICB3eXN3aWV0bEVsZW1lbnQoZS5yb2R6YWpUZW1wbGF0a2ksIGUub3Bpcyk7XHJcbiAgICAvLyAgIH0pO1xyXG4gICAgLy8gfSxcclxuICAgIHd5c3dpZXRsSmVkZW5FbGVtZW50OiAocm9kemFqVGVtcGxhdGtpLCBvcGlzKSA9PiB7XHJcbiAgICAgIHd5c3dpZXRsRWxlbWVudChyb2R6YWpUZW1wbGF0a2ksIG9waXMpO1xyXG4gICAgfSxcclxuICAgIHVzdW5FbGVtZW50OiBlID0+IHtcclxuICAgICAgZS5wYXJlbnROb2RlLnJlbW92ZSgpO1xyXG4gICAgfSxcclxuICAgIHNrcmVzbEVsZW1lbnQ6IGUgPT4ge1xyXG4gICAgICBlLmNsYXNzTGlzdC50b2dnbGUoXCJ0b2RvX19lbGVtZW50LS1za3Jlc2xvbnlcIik7XHJcbiAgICB9XHJcbiAgfTtcclxufSkoKTtcclxuXHJcbmNvbnN0IHRvZG9BcHBLb250cm9sZXIgPSAoKGRhdGEsIHVpKSA9PiB7XHJcbiAgY29uc3QgcG9rYXpJbnB1dCA9IChyb2R6YWpUZW1wbGF0a2ksIGlucHV0KSA9PiB7XHJcbiAgICBjb25zdCB1a3J5alBvemFGb2N1c2VtID0gKCkgPT4ge1xyXG4gICAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKFwidG9kb19faW5wdXQtLXBva2F6XCIpO1xyXG4gICAgICBpbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNvdXRcIiwgdWtyeWpQb3phRm9jdXNlbSk7XHJcbiAgICAgIGlucHV0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCBnZHlOYWNpc25pZXR5RW50ZXIpO1xyXG4gICAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGdkeU5hY2lzbmlldHlFbnRlciA9IGUgPT4ge1xyXG4gICAgICBpZiAoZS5rZXkgPT09IFwiRW50ZXJcIikge1xyXG4gICAgICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJ0b2RvX19pbnB1dC0tcG9rYXpcIik7XHJcbiAgICAgICAgaWYgKGlucHV0LnZhbHVlKSB7XHJcbiAgICAgICAgICBkYXRhLmRvZGFqRWxlbWVudChyb2R6YWpUZW1wbGF0a2ksIGlucHV0LnZhbHVlKTtcclxuICAgICAgICAgIHVpLnd5c3dpZXRsSmVkZW5FbGVtZW50KHJvZHphalRlbXBsYXRraSwgaW5wdXQudmFsdWUpO1xyXG4gICAgICAgICAgaW5wdXQudmFsdWUgPSBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgZ2R5TmFjaXNuaWV0eUVudGVyKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKFwidG9kb19faW5wdXQtLXBva2F6XCIpO1xyXG4gICAgaW5wdXQuZm9jdXMoKTtcclxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c291dFwiLCB1a3J5alBvemFGb2N1c2VtKTtcclxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCBnZHlOYWNpc25pZXR5RW50ZXIpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGRvZGF3YW5pZUVsZW1lbnR1ID0gZSA9PiB7XHJcbiAgICBjb25zdCByb2R6YWpUZW1wbGF0a2kgPSBlLmRhdGFzZXQudHlwZTtcclxuICAgIGNvbnN0IHBvbGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGBbZGF0YS10ZW1wbGF0ZT0ke3JvZHphalRlbXBsYXRraX1dYFxyXG4gICAgKS5wYXJlbnROb2RlLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XHJcblxyXG4gICAgcG9rYXpJbnB1dChyb2R6YWpUZW1wbGF0a2ksIHBvbGVJbnB1dCk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdXN1d2FuaWVFbGVtZW50dSA9IGUgPT4ge1xyXG4gICAgY29uc3Qgb3BpcyA9IGUucGFyZW50Tm9kZS5maXJzdENoaWxkLmlubmVySFRNTDtcclxuICAgIGNvbnN0IHJvZHphaiA9XHJcbiAgICAgIGUucGFyZW50Tm9kZS5wYXJlbnROb2RlLnByZXZpb3VzRWxlbWVudFNpYmxpbmcucHJldmlvdXNFbGVtZW50U2libGluZ1xyXG4gICAgICAgIC5kYXRhc2V0LnR5cGU7XHJcbiAgICBkYXRhLnVzdW5FbGVtZW50KHJvZHphaiwgb3Bpcyk7XHJcbiAgICB1aS51c3VuRWxlbWVudChlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBkb2RhakV2ZW50eSA9ICgpID0+IHtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcclxuICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZSA9PT0gXCJ0b2RvX19kb2RhalwiKSB7XHJcbiAgICAgICAgZG9kYXdhbmllRWxlbWVudHUoZS50YXJnZXQpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChlLnRhcmdldC5jbGFzc05hbWUgPT09IFwidG9kb19fdXN1blwiKSB7XHJcbiAgICAgICAgdXN1d2FuaWVFbGVtZW50dShlLnRhcmdldCk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKFxyXG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTmFtZSA9PT0gXCJ0b2RvX19lbGVtZW50XCIgfHxcclxuICAgICAgICBlLnRhcmdldC5jbGFzc05hbWUgPT09IFwidG9kb19fZWxlbWVudCB0b2RvX19lbGVtZW50LS1za3Jlc2xvbnlcIlxyXG4gICAgICApIHtcclxuICAgICAgICB1aS5za3Jlc2xFbGVtZW50KGUudGFyZ2V0KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGluaWNqYWxpemFjamE6ICgpID0+IHtcclxuICAgICAgZG9kYWpFdmVudHkoKTtcclxuICAgIH1cclxuICB9O1xyXG59KShkYXRhS29udHJvbGVyLCB1aUtvbnRyb2xlcik7XHJcblxyXG50b2RvQXBwS29udHJvbGVyLmluaWNqYWxpemFjamEoKTtcclxuIl19
