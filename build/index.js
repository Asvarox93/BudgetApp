"use strict";var budgetController=function(){var r=[0],u=[0],t=0,o=0,a=0,n=0,d=function(){var e=function(e,t){return e+t};o=Math.round(100*r.reduce(e))/100,a=Math.round(100*u.reduce(e))/100,t=Math.floor(100*(o-a))/100,n=Math.floor(100*a/o*100)/100};return{dodajElementDoBudzetu:function(e){"dochod"===e.rodzaj&&r.push(e.kwota),"wydatki"===e.rodzaj&&u.push(e.kwota),d()},usunElementZBudzetu:function(e){var t=e.parentNode.parentNode.dataset.type,o=e.parentNode.previousElementSibling.innerHTML.match(/\d+/g).map(Number);if("dochod"===t){var a=r.indexOf(o[0]);-1!==a&&r.splice(a,1)}if("wydatki"===t){var n=u.indexOf(o[0]);-1!==n&&u.splice(n,1)}d()},pobierzDaneBudzetu:function(){return{sumaDochodu:o,sumaWydatki:a,saldo:t,wydatkiProcent:n}}}}(),uiController={zglosBledy:function(e){var t=document.querySelector(".kalkulator__bledy");t.innerHTML=e,t.classList.add("kalkulator__bledy--aktywny"),setTimeout(function(){t.classList.remove("kalkulator__bledy--aktywny")},5e3)},dodajElementBudzetuDoUI:function(e){var t,o=(t=e.rodzaj,document.querySelector("#".concat(t,"__template")).cloneNode(!0));o.content.querySelector(".element__opis").innerHTML=e.nazwa,o.content.querySelector(".element__kwota").innerHTML="".concat(e.kwota," zł"),document.querySelector(".".concat(e.rodzaj,"__lista")).appendChild(o.content)},aktualizujBudzetUI:function(e){var t=document.querySelector(".budzet__srodki"),o=document.querySelector(".dochod__srodki"),a=document.querySelector(".wydatki__srodki"),n=document.querySelector(".wydatki__procent");t.innerHTML=e.saldo+" zł",o.innerHTML=e.sumaDochodu+" zł",a.innerHTML=e.sumaWydatki+" zł",n.innerHTML=e.wydatkiProcent+" %"}},appController=function(a,n){var r=function(t){var o="";if(Object.keys(t).forEach(function(e){""===t[e]?o+="nazwa"===e?"Wprowadz dane w polu dodaj opis <br>":"Wprowadz dane w polu ".concat(e," <br>"):"nazwa"===e&&t[e].length<3?o+="Wprowadz minimum 3 znaki w polu ".concat(e," <br>"):("kwota"===e&&isNaN(parseFloat(t[e]))&&!isFinite(t[e])||String(t[e]).includes("-"))&&(o+="Wprowadz poprawne dane w polu ".concat(e," (tylko liczby) <br>"))}),o)return n.zglosBledy(o),!0};return{inicjalizacja:function(){document.querySelector("body").addEventListener("click",function(e){var t,o;"far fa-check-circle"===e.target.className&&(t={rodzaj:document.querySelector('[name="rodzaj"]').value,nazwa:document.querySelector('[name="nazwa"]').value,kwota:Math.floor(100*document.querySelector('[name="kwota"]').value.replace(",","."))/100},r(t)||(a.dodajElementDoBudzetu(t),n.dodajElementBudzetuDoUI(t),n.aktualizujBudzetUI(a.pobierzDaneBudzetu()))),"far fa-times-circle"===e.target.className&&(o=e.target,a.usunElementZBudzetu(o),n.aktualizujBudzetUI(a.pobierzDaneBudzetu()),o.parentNode.parentNode.remove())})}}}(budgetController,uiController);appController.inicjalizacja();
"use strict";
"use strict";document.addEventListener("DOMContentLoaded",function(e){var t=document.querySelector(".hamburger__przycisk"),r=document.querySelector(".nawigacja"),a=!1;document.addEventListener("click",function(e){if(e.target.closest(".hamburger__przycisk"))return r.classList.toggle("nawigacja--ukryj"),t.classList.toggle("hamburger__przycisk--aktywny"),void(a=!a);if(1==a){if(e.target.closest(".nawigacja"))return;return r.classList.add("nawigacja--ukryj"),t.classList.remove("hamburger__przycisk--aktywny"),void(a=!a)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
